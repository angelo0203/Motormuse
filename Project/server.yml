Parameters:
    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String

Resources:

  LBSecGroup:
       Type: AWS::EC2::SecurityGroup
       Properties:
         GroupDescription: Allow http to our LB
         VpcId: 
           Fn::ImportValue:
             !Sub "${EnvironmentName}-VPCID"                 
         SecurityGroupIngress: 
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
         SecurityGroupEgress: 
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0

  WebServerSecGroup:
       Type: AWS::EC2::SecurityGroup
       Properties:
         GroupDescription: Allow http to our hosts and SSH from local only
         VpcId: 
           Fn::ImportValue:
             !Sub "${EnvironmentName}-VPCID"        
         SecurityGroupIngress: 
          - IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
         SecurityGroupEgress: 
          - IpProtocol: tcp
            FromPort: 0
            ToPort: 65535
            CidrIp: 0.0.0.0/0
  
  WebAppLaunchConfig:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install unzip awscli -y
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            aws s3 cp https://angelo-udacityproject.s3-us-west-2.amazonaws.com/udacity-website.zip
            unzip -o udacity-website.zip
        ImageId: ami-06f2f779464715dc5
        SecurityGroups: !Ref WebServerSecGroup
        InstanceType: t2.medium
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'

  WebAppGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRI-NETS"
        LaunchConfigurationName: !Ref WebAppLaunchConfig
        MaxSize: "2"
        MinSize: "2"
        TargetGroupARN: !Ref WebAppTargetGroup

  WebAppTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 8
        HealthyThresholdCount: 2
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId: 
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"

  WebAppLB:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
        SecurityGroups: !Ref 'LBSecGroup'

  Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      DependsOn:
        - WebAppLB
        - WebAppTargetGroup
      Properties:
        DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
        LoadBalancerArn: !Ref WebAppLB
        Port: '80'
        Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      DependsOn:
        - Listener
        - WebAppTargetGroup
      Properties:
        Actions:
        - Type: Forward
          TargetGroupArn: !Ref WebAppTargetGroup
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref Listener
        Priority: 1





